; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyGroupName "UNOMi"
#define MyAppName "UNOMi Cinema 4D Plugin"
#define MyAppVersion "1.0.6"
#define MyAppPublisher "Oomi Inc."
#define MyAppURL "https://getunomi.com/"
#define MyAppDir "py-unomi-lipsync"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{BD9CC3F9-E403-4359-BD93-68B0DA9006AF}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
CreateAppDir=yes
; Prevent changing dir
DisableDirPage=yes
DisableProgramGroupPage=yes

; TODO - Find the dir using dropdown
DefaultDirName={code:GetDirName}\{#MyAppDir}
DefaultGroupName={#MyGroupName}
LicenseFile=..\support\LICENSE.txt
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=..\output
OutputBaseFilename=unomi-c4d-plugin
SetupIconFile=..\support\unomi-logo.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "..\dist-c4d\{#MyAppDir}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files


[Code]

var
  DirName: string;

function GetDirName(Param: string): string;
begin
  Result := DirName;
end;

function TryPath(Path: string): Boolean;
var
  FindRec: TFindRec;
  BasePath, SearchPattern, FullPath: string;
begin
  Result := False;
  BasePath := ExtractFilePath(Path);
  SearchPattern := ExtractFileName(Path);

  if FindFirst(BasePath + SearchPattern, FindRec) then
  begin
    repeat
      if (FindRec.Name <> '.') and (FindRec.Name <> '..') then
      begin
        // Once found, check if the plugins dir exists
        FullPath := BasePath + FindRec.Name + '\plugins';
        if DirExists(FullPath) then
        begin
          Log(Format('Path %s exists', [FullPath]));
          DirName := FullPath;
          Result := True;
          Break;
        end;
      end;
    until not FindNext(FindRec);
    FindClose(FindRec);
  end;
  
  if not Result then
  begin
    Log(Format('Path %s does not exist', [Path]));
  end;
end;

// Being called before the installation starts
function InitializeSetup(): Boolean;
var
  PluginDir: string;
begin
  // Find path, with the latest version taking priority
  PluginDir := ExpandConstant('{userappdata}\Maxon\Maxon Cinema 4D ');
  Result :=
    TryPath(PluginDir + '2026_*') or
    TryPath(PluginDir + '2025_*') or
    TryPath(PluginDir + '2024_*') or
    TryPath(PluginDir + '2023_*') or
    TryPath(PluginDir + 'S26_*') or
    TryPath(PluginDir + 'R25_*'); // 2021
  // In Pascal, `or` is short-circuiting, so it stops at the first true
    
  // If multiple, last match is stored
  if Result then
  begin
    Log(Format('Destination %s selected', [DirName]));
  end
  else
  begin
    MsgBox('No supported Cinema 4D found, aborting installation', mbError, MB_OK);
  end;
end;